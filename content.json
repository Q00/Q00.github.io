{"meta":{"title":"Q00 blog","subtitle":null,"description":null,"author":"Q00","url":"http://Q00.github.io"},"pages":[],"posts":[{"title":"AWS-EMR","slug":"AWS-EMR","date":"2018-07-15T10:03:27.000Z","updated":"2018-07-15T10:03:27.757Z","comments":true,"path":"AWS-EMR/","link":"","permalink":"http://Q00.github.io/AWS-EMR/","excerpt":"","text":"MapReduce HDFS에 분산 저장된 데이터에 스트리밍 접근을 요청하며 빠르게 분산처리하도록 고안된 프로그래밍 모델이자 병렬 기법 대규모 분산 컴퓨팅 혹은 단일 컴퓨팅 환경에서 개발자가 대량의 데이터를 parallel하게 분석하게 분석할 수 있음 정보 검색을 위한 데이터가공(색인어 추출, 정렬 및 역 인덱스 생성)을 목적으로 개발됨 Amazon Elastic Map Reduce (EMR) AWS에서 제공하는 Mapreduce service 오픈 소스인 AWS 하둡, apache spark, Hbase와 같은 분산 프레임워크를 활용하여 분산 처리 시스템을 실행하고, 다른 서비스들과 연동할 수 있는 서비스 클릭 스트림 분석, 실시간 분석, 로그분석 ec2 컴퓨터와 S3의 하드를 이용하여 MapReduce 연산 진행 - 가장 load가 큰 작업은 IO작업 create EMR Cluster : 연산을 담당하는 EC2, job을 정의하는 Step, hadoop등 프레임워크 모음 클러스터에서 하드웨어와 소프트웨어 환경을 구성한뒤 MapReduce를 실행함 Logging 클러스터의 활동 기록 - S3에 버킷 형태로 저장 Action on failure 대부분의 과금 원인","categories":[],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://Q00.github.io/tags/AWS/"},{"name":"EMR","slug":"EMR","permalink":"http://Q00.github.io/tags/EMR/"},{"name":"MapReduce","slug":"MapReduce","permalink":"http://Q00.github.io/tags/MapReduce/"}]},{"title":"AWS-S3","slug":"AWS-S3","date":"2018-07-15T08:32:01.000Z","updated":"2018-07-15T08:32:01.858Z","comments":true,"path":"AWS-S3/","link":"","permalink":"http://Q00.github.io/AWS-S3/","excerpt":"","text":"S3 ( Amazon Simple Storage Service) 인터넷용 스토리지 서비스. 개발자가 보다 쉽게 웹 규모 컴퓨팅 작업이 가능하도록 설계 언제 어디서나 원하는 양의 데이터를 저장하고 검색가능 S3를 써야하는 이유성능","categories":[],"tags":[]},{"title":"AWS-key-pair-위치","slug":"AWS-key-pair-위치","date":"2018-07-15T07:51:48.000Z","updated":"2018-07-15T07:51:48.733Z","comments":true,"path":"AWS-key-pair-위치/","link":"","permalink":"http://Q00.github.io/AWS-key-pair-위치/","excerpt":"","text":"key pair 저장위치 : ~/.ssh/authorized_keys형식 : ssh-rsa &lt;공개키&gt; &lt;커멘트&gt;","categories":[],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://Q00.github.io/tags/AWS/"},{"name":"LINUX","slug":"LINUX","permalink":"http://Q00.github.io/tags/LINUX/"},{"name":"SSH-RSA","slug":"SSH-RSA","permalink":"http://Q00.github.io/tags/SSH-RSA/"},{"name":"KEY-PAIR","slug":"KEY-PAIR","permalink":"http://Q00.github.io/tags/KEY-PAIR/"}]},{"title":"AWS-Elastic-IP","slug":"AWS-Elastic-IP","date":"2018-07-15T07:42:59.000Z","updated":"2018-07-15T07:42:59.919Z","comments":true,"path":"AWS-Elastic-IP/","link":"","permalink":"http://Q00.github.io/AWS-Elastic-IP/","excerpt":"","text":"Elastic IP 동적 클라우드 컴퓨팅을 위해 고안된 고정 IPv4 주소 IPv6 지원하지 않음 참고 : https://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html elastic ip : 고정된 공인 ip 제공 ec2인스턴스 배정된 ip는 ec2 인스턴스가 실행될때만 유효 , 그외에는 반납 다시시작하면 바뀔수있음 -&gt; 유동 ip따라서 이러한 공인 ip에대해 elastic ip로 연결을 시켜논다.dns같은경우 유동ip하기가 힘듬 프리티어에서 Elastic IP 1개를 무료로 사용 가능하지만 Elastic IP는 EC2에 연결해두지 않으면 요금이 청구 elastic ip를 할당만받고 인스턴스에 사용하지 않는다면 요금이 부과됨(공인 ip주소 매우부족) ip가 부족한 상황에서 Elastic ip를 만들어두고 EC2에 연결하지 않으면 ip가 만들어져 있지만 사용되지 않고 있으므로 요금이 청구 또한, EC2에 연결해두었더라도 EC2가 stop되어있는 상태라면 요금이 청구 만약 Elastic ip를 만들어두고 할당을 하지 않은 상태라면 실행중인 EC2에 할당 혹은 Elastic ip 삭제 필요! ec2인스턴스 생성하여 ssh접속해 한참 작업 후인스턴스재부팅했는데 ssh로접속이 안된다면 ip가 바뀐것임","categories":[],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://Q00.github.io/tags/AWS/"},{"name":"Elastic_IP","slug":"Elastic-IP","permalink":"http://Q00.github.io/tags/Elastic-IP/"}]},{"title":"AWS-Security_Group","slug":"AWS-Security-Group","date":"2018-07-15T07:30:31.000Z","updated":"2018-07-15T07:30:31.526Z","comments":true,"path":"AWS-Security-Group/","link":"","permalink":"http://Q00.github.io/AWS-Security-Group/","excerpt":"","text":"security group security group으로 방화벽 설정하기security group : ec2 인스턴스에 적용할 수 있는 방화벽 설정 inbound : 외부에서 ec2인스턴스로 들어오는 트래픽 http https ssh rdp Outbound : 외부로 나가는 트래픽. ec2 인스턴스안에서 인터넷을 할경우(파일다운로드, 외부 ssh접속)-&gt; outbount 정책에 대한 제어가 필요한 경우는 security group으로는 불가능하며 Network ACL 기능 사용해야함.(Access control list) 방화벽열할을 하는 VPC를 위한 선택적 보안 계층 참조 :https://docs.aws.amazon.com/ko_kr/AmazonVPC/latest/UserGuide/VPC_Security.html#VPC_Security_Comparison type: 프로토콜 형태 tcp udp icmp port : 포트번호 icmp는 포트번호 사용하지 않음 source, destination : 연결 혹은 접속 가능한 ip대역 rule : 위의 여러 것들을 세팅 조합한 것 참조 :https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html http://faq.hostway.co.kr/AWS_HELP/7912","categories":[],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://Q00.github.io/tags/AWS/"},{"name":"Security_Group","slug":"Security-Group","permalink":"http://Q00.github.io/tags/Security-Group/"}]},{"title":"AWS-EBS","slug":"AWS-EBS","date":"2018-07-07T11:06:07.000Z","updated":"2018-07-07T12:01:34.852Z","comments":true,"path":"AWS-EBS/","link":"","permalink":"http://Q00.github.io/AWS-EBS/","excerpt":"","text":"EBS(Elastic Block Store)ec2인스턴스에 장착하여 사용할 수 있는 가상 저장 장치ec2인스턴스에서 제공하는 기본용량보다 더 사용해야할때, 운영체제를 중단시키지 않고 용량을 자유롭게 늘리고 싶을때, 영구적인 데이터보관이 필요할때, RAID등의 고급기능이 필요할때 사용 프리티어에서 ebs 스토리지 30gb, ebs 200만io무료로 사용 ec2에 설치된 os에서 그냥 일반적인 하드디스크나 ssd처럼 인식, 원하는 크기로 만들 수 잇음, iops 원하는 수치 Block은 unix/linux계열 os에서 일정한 크기단위로 읽고 쓰는 저장장치를 부르는말, 자기테이프, 플로피디스크, 하드디스크, 광학디스크, ssd등의 플래시메모리가 대표적 volume: ebs의 가장 기본적인 형태, os에서 바로 사용가능image : AMI(Amazon machine image)를 줄여부르는말, os가 설치된 형태, AMI로 ec2인스턴스 생성snapshot : ebs볼륨의 특정시점을 그대로 복사해 저장,스냅샷을 이용하여 ebs볼륨과 AMI 생성=&gt; 과금됨 주의(다른 리전 냅뒀을 경우)IOPS(Input Ouput Per Second) 저장장치의 성능측정장치(100~4000IOPS) - 16kb단위로 처리, 크기가 작은파일이 있다면 16kb로 묶어서 처리하면 높은 성능 ebs 볼륨과 RAIDebs도 RAID구성을 할 수 있음 RAID0 RAID1 RAID 1+0(RAID10) 타입 구성 EBS 스냅샷 :프리티어 1기가 무료사용스냅샷으로 ebs 볼륨 생성(다른 AZ에 생성가능)스냅샷으로 AMI생성스냡샷을 다른 리전으로 복사저장요금 -&gt; s3데이터 저장요금에 합산 ebs 스냅샷 생성하기ebs 볼륨목록에서생성하는방법, ebs스냅샷목록에서 생성하는방법 2가지","categories":[],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://Q00.github.io/tags/AWS/"},{"name":"EBS","slug":"EBS","permalink":"http://Q00.github.io/tags/EBS/"}]},{"title":"AWS_ec2","slug":"AWS-ec2","date":"2018-07-05T14:44:58.000Z","updated":"2018-07-07T11:22:51.755Z","comments":true,"path":"AWS-ec2/","link":"","permalink":"http://Q00.github.io/AWS-ec2/","excerpt":"","text":"ec2 : elastic compute cloudaws에서 가장 기본적이면서 널리쓰이는 인프라 - 인터넷에 연결된 가상서버를 제공해줌 프리티어 - linux,unix,rhel 마이크로 인스턴스 750시간, window 마이크로 인스턴스 750시간 사용해야 하는 이유효율성과 비용 절감 start : ec2 인스턴스 시작, 운영체제가 부팅되고 사용할 수 있는 상태, 시작하는 순간부터 요금 과금 stop : ec2 인스턴스 정지, 완전히 시스템 정지 terminate : ec2인스턴스 삭제 reboot : ec2인스턴스 재부팅 root : 운영체제가 설치되는 스토리지, root 장치로 ebs와 인스턴스 스토리지 사용할 수 있음 kernel Id : ec2 인스턴스가 사용하는 Linux 커널,, linux 반가상화 : 외부에서 리눅스커널 지정필요 운영체제에 따른 가상화 형태 windows : os 의 커널을 수정할 수 없기 때문에 HVM(하드웨어 가상화) Full virtualization(전가상화)로 실행됨 linux : os의 커널을 수정할 수 있음, Paravirtualization (반가상화) 로 실행됨 전가상화커널을 때에 따라 선택할 수 잇음 ec2 sla(Service Level Agreement)월 99.95% : 한달에 0.36시간 장애 발생가능 ec2가 여러가지 사양인 이유비용절감 효율성 -&gt; 사용자에게 선택권을 줌 인스턴스 유형m[0-9].medium (인스턴스 패밀리 : m, 세대를 뜻하는 숫자, .뒤에는 사양 규모를 뜻하는 단어) 범용 : M1, M3으로 시작 vcpu, 메모리 네트워크 저장공간 평균 사양 컴퓨팅최적화 : C로 시작하는 인스턴스 유형, 다른 인스턴스 패밀리에 비해 메모리 대비 vCpu 비율 높음 GPU 인스턴스 : G로 시작, 고성능의 nvdia gpu 장착, CUDA Opencl 등울 실행할때 사용됩니다 메모리 최적화 :M2와 CR1로 시작하는 인스턴스 유형, 메모리 용량이 훨씬 큽니다. 스토리지 최적화 : H와 I로 시작하는 인스턴스 유형, 스토리지 용량이 훨씬크거나, 초고속 I/O 제공 마이크로 인스턴스 : 가격이 가장 싼 인스턴스, 낮은 vCpu 성능과 적은 메모리 제공vCpu : 가상화소프트웨어 제공되는 CPU 과금방식온디맨드 인스턴스 : 사용률에 따른 결제방식스팟 인스턴스 : 경매 인스턴스예약 인스턴스 : 선결제방식 ec2 생성할 떄t1.micro : 반가상화 Amazon Linux AMI 선택했으면 t1만 사용가능t2.micro : 하드웨어 가상화 Amazon Linux AMI 선택했으면 t2만 사용가능 cpu 많이 쓰는 컴파일 작업을 할때는 t2인스턴스 유형이 유리함 configure instance detailsnumber of instances : 생성할 인스턴스 개수purchasing option : 스팟 인스턴스의 구매 옵션network : vpc 네트워크를 선택하는 옵션subnet : Availability Zone(가용영역)을 선택하는 옵션public ip : 공인 ip 할당하는 옵션IAM role : IAM 역할 설정shutdown behavior : ec2 인스턴스 안에 설치된 운영체제를 종료했을 때의 행동을 설정 (stop terminate)enale Termination protection : 실수로 삭제하는 것을 방지하는 옵션Monitoring : cloudwatch 세부 모니터링 사용 옵션tenancy : 가상 서버 실행 방식을 설정하는 옵션: 공유 인스턴스(shared tenancy) 전용인스턴스(Dedicated tenancy)를 선택가능 add storagetype: 루트장치(EBS)인지 추가장치(EBS, instance storage)인지Snapshot :스냅샷idsize : 스토리지 크기 (gb단위)Volume type: 스토리지 볼륨 유형 magnetic, general purpose(SSD) provisioned IOPS(SSD) 선택할 수있음magnetic : 하드디스클 사용하는 스토리지 100IOPSgeneral purpose : ssd - 1GiB당 3IOPS를 제공하는 스토리지. 마그네틱보다추가요금발생3600 초 동안 3000iops까지 성능이 높아지는 burst기능 제공(순간적으로 io가 몰릴때 iops를 높임)provisioned iops : ssd를 사용하고, I/O 대역폭을 설정할 수 있음, 마그네틱보다 추가요금발생IOPS : volume type 을 provisioned IOPS 로 선택했을때 IOPS를 설정가능delete on termination : ec2 인스턴스가 실행되고 있을때 스토리지가 실수로 삭제되는 것을 방지. puuty ssh 접속ec2 서버 인스턴스 생성 후 key value pem file 다운로드 후 puttygen -&gt; ppt file 컨버전 기본 사용자명amazon linux : ec2-userrhel: ec2-userSuSE Linux : rootUbuntu Linux : ubuntu ec2 기타 설정 및 기능placement group : 물리적으로 인접한 곳에 ec2인스턴스 생성 -&gt; 네트워크 퍼포먼스 극대화’bundle instance(instance store ami) : 인스턴스 스토리지를 루트장치로 사용하는 windows instance의 내용을 s3버킷에 저장하는 기능bundle task : bundle instance가 처리되는 과정network interface : ENI(Elastic network interface) 생성하고 ec2인스턴스에 장착","categories":[],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://Q00.github.io/tags/AWS/"},{"name":"ec2","slug":"ec2","permalink":"http://Q00.github.io/tags/ec2/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-04-21T05:13:04.712Z","updated":"2018-04-21T05:13:04.712Z","comments":true,"path":"hello-world/","link":"","permalink":"http://Q00.github.io/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}